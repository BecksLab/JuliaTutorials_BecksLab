{
  "hash": "ab96666c90eb9e83161e81e629e3f008",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Tutorial 1: Downloads, Setups and Your First Project\"\ndate: last-modified\nauthor: \"Danet and Becks, based on originals by Delmas and Griffiths\"\nformat:\n    html:\n        embed-resources: true\ntitle-block-banner: true\nengine: julia\n---\n\n\n\n\n\n\n## Downloading and Installing Julia and VSCode\n\n::: {.callout-caution}\nThis is a test\n:::  \n\n**Julia**\n\nNavigate to [this page](https://julialang.org/downloads/) and follow the platform-specific instructions to download and install Julia (we recommend installing the current stable release).\n\nDuring the installation process, you may be prompted to add Julia to the PATH, this box should be ticked.\n\n::: {.callout-tip collapse=\"true\"}\n## Using Juliaup\n\n[Juliaup](https://github.com/JuliaLang/juliaup) is an alternative platform to install and manage multiple versions of Julia you run on your computer. This is useful if you need to run different versions of Julia for different projects but probably not essential for a casual Julia user, although there is also something to be said about setting yourself up with the best toys on the market...\n:::  \n\n**VSCode**\n\nNavigate to [this page](https://visualstudio.microsoft.com/) to download and install your platform specific Visual Studio Code (not Visual Studio or Visual Studio for Mac).\n\n## Setting Up VSCode to use Julia\n\nVS Code is a free source-code editor, allowing you to code in multiple coding languages all from a platform that is completely customisable to the user - think of it as a more language agnostic version of RStudio. This flexibility is great but it does mean that you need to spend time telling VS Code what it is you want to do and how. This is where extensions come in; extensions are higher level packages that permit the use of a given coding language like Julia, edit your themes and icons, provide helpful applications like spell checker or Bracket Pair Colorizer, and for adding your own [VS Code pets](https://tonybaloney.github.io/vscode-pets/usage) (a very important part of the VSCode experience).\n\nTo install Julia in VS Code do the following (you only need to do this once):\n\n1.  open VS Code (you'll see the welcome page)\n2.  navigate to the 'Marketplace' (5th symbol down in the activity bar - vertical panel on the lefthand side of the screen)\n\n![The Marketplace Button](Figs/VSCode_FirstView.png)\n\n3.  search for Julia in the 'Search Extensions in Marketplace' search bar\n4.  install `Julia`, this extension provides support for the Julia programming language and install `Julia Formatter`, this extension will help you write clean code that is easier to read\n\n![Selecting the Julia Language Support and Formatter](Figs/JuliaLangAndFormatter.png)\n\n## Making your first Julia project\n\nAs with working in R and RStudio, we advocate working in a contained project environment when using Julia. Each unique project may require a different setup (e.g. packages, package versions, working directories, data locations, etc.).\n\nTo set up a project in VS Code:\n\n1.  Creating a folder at a location of your choosing (e.g. within your Documents folder). This can be on GoogleDrive, Dropbox or OneDrive. This is OK.\n\n2.  Name the folder with relevant works. Here we will use `Julia - VS code - how to`.\n\n3.  Navigate to VSCode and open your new project by clicking on the 'Explorer' symbol (top left symbol on the activity bar) and click Open Folder and navigate your finder or explorer to the `Julia - VS code - how to` folder.\n\n    -   this folder becomes the working directory (same as when using an `.RProject` in R)\n\n![Opening Your Project](Figs/OpenProject.png)\n\n4.  Create a new file (a script) in your directory: do this by using cmd-N (mac) or ctrl-N (windows) or File -\\> New File or by left clicking -\\> New File within the directory pane\n\n5.  Name your script as your see fit but please remember to include the .jl file extension (e.g. JuliaTuto.jl). the .jl file extension tells VS Code you want to use the Julia programming language. To save your script at any time use cmd-S (MAC) OR ctrl-S (windows) or File \\> Save.\n\n    -   Note, you can also open a project in VS Code by right-clicking on your folder (in Finder, Windows file explorer or Linux nautilus) and selecting Open with -\\> Other -\\> VS Code.\n\n### Activating the REPL and running some code.\n\nThis sequence of figures aligns with the instructions below.\n\n![Initiating and using the REPL](Figs/UsingREPL.png)\n\nNow that you have an active project and a new script file you can open the Julia REPL. REPL stands for *read, execute, print and loop*. The REPL is like the console in R and is where the magic happens. In Eva's words, it's VS Code's way of using Julia for a brain.\n\nTo do this you type F1 or cmd/ctrl - shift-p or View -\\> Command Palette and choose Julia REPL. The command palette will appear as a drop down menu with a search function at the top of the page.\n\nNow that you have an interface with Julia as a brain, you can actually do something! Try this: type `print(\"Hello world\")` in the REPL and press Enter/Return. If you've done all of the above correctly, Hello world should print in the REPL.\n\nNow, you can also make a 'script'. Type ctrl-n or cmd-n and a document will open at the top. There will be a prompt/link to select your language. Click the link and, yes, search for and choose Julia.\n\nNext, type `print(\"Hello world\")` in the script. Just like RStudio, you can send the information in the script to the REPL. There are two ways to do this. First, and probably what you'll want, is shift-enter(return). This will send the line of code you are on, and move to the next line. ctrl-enter(return) submits the line but does not move the cursor. Try it!\n\n## Activating your project, the Project.toml and Manifest.toml\n\nWe mentioned above that it is good practice to work within an environment specific to each project. The Julia package manager (`Pkg`) allows you to do that easily: Unlike traditional package managers, which install and manage a single global set of packages, `Pkg` is designed around environments: independent sets of packages that can be local to an individual project or shared and selected by name (text taken directly from the documentation).\n\n### Getting started: activating your project.\n\nActivating your project is something that only needs doing once per computer. It allows you to add packages and dependencies to the project.\n\nIf you move the project to a new computer, or share the project, activation will be needed again.\n\nThere are two ways to activate your project.\n\n1.  type `Pkg.activate(\".\")` in the REPL.\n2.  type `]` in the REPL and then `activate .`\n\nThe `]` is a shorthand for using the `Pkg` package and opens the package manager. To get out of this, you press the `backspace/delete` button on your keyboard.\n\nThere are two ways to double check that you are actually working within your project:\n\n-   check/click the 'Julia env:...' on the bottom of your screen (blue bar), it should match your project name\n\n-   enter the package manager by typing `]` in the Julia REPL, you should see (your-project-name) pkg\\> instead of julia\\>. Again, exit the package manager using `backspace/delete` button.\n\n### Working with the package manager and growing the project and manifest files\n\nOnce your project is activated, there are two ways to use the package manager (Pkg):\n\n1.  directly from the REPL:\n\n-   navigate to the REPL\n-   type `]`\n-   you will see that instead of seeing julia\\> you now see (your-project-name) pkg\\>, indicating that all the packages that you now install (or update) will be installed (or updated) within this specific project\n-   to add a package, use the function `add`: `] add Plots`\n\n2.  using `Pkg` (this is useful when you want to install packages or manage them from within your script):\n\n-   first type `import Pkg` and execute this line using shift-Enter\n-   on subsequent lines, add, remove and update packages from your script using `Pkg` functions such as `Pkg.add()`, `Pkg.remove()` or `Pkg.update()`.\n-   To add a packages, the name of the package need to be written with quotes (`Pkg.add(\"Plots\")`).\n\n#### An example using the Plots package\n\nNow that we are all set up, we are going to install a package, check the project's status and remove a package. As this might be your first time installing a package (e.g., Plots), don't be concerned if it takes a couple of minutes to run.\n\n-   type `] add Plots` in the REPL (or `Pkg.add(\"Plots\")`) in your script and execute using Ctrl-Enter.\n    -   you just installed the Plots package and a whole bunch of dependencies that Plots needs to work. This is equivalent to Base plots in R.\n\n![Package Installing](Figs/Pkg.adding.png)\n\n-   type `] st` in the REPL. This will check the status of your project and print the content of your Project.toml file, which is the list of main packages, in this case, just Plots.\n\nyou should see something like:\n\n![Package Status Check](Figs/StatusCheck.png)\n\n::: {.callout-tip}\n## Tip\n\nPackages can removed in the same way i.e. `] rm Plots`  (or `Pkg.rm(\"Plots\")`) will remove the Plots package from your project environment (and its record in the Project.toml and Manifest.toml files)\n:::  \n\n## Gearing up to Do More Stuff (what packages do I need).\n\nThere are a core set of packages we use for all of our work. These 10 packages are almost always installed when we make a project.\n\nGo ahead and use either the `]` or `Pkg.add(\"package.name\")` method to add all of these to your project.\n\n#### For working with data\n\n`CSV` `DataFrames` `DelimitedFiles`\n\n#### For plotting\n\n`Plots`\n\n#### For statistical things\n\n`Distributions` `Random` `Statistics` `StatsBase` `StatsPlots`\n\n#### For Modelling\n\n`DifferentialEquations`\n\n## Your first script setup.\n\nAt this stage, you should have a good understanding about how to create a project folder, activate a project, start the REPL, open a script and add packages to the project.\n\nNow you are ready to 'setup' your first script.\n\n1.  create a new script file (ctrl-n or cmd-n).\n2.  choose Julia as the language\n3.  Type some informative information at the top of the script\n    a.  just like in R and other programming languages, the `#` is a commenter.\n4.  The first section of your script is where you declare the packages you'll be using.\n    a.  the function to do this is `using`.\n    b.  make Plots, Random and DataFrames available.\n\nNow you are ready to do something really simple. Let's make some variables, data frames and a few simple plots.\n\nFirst, lets get the setup sorted and packages available\n\n\n\n\n::: {#4 .cell execution_count=1}\n``` {.julia .cell-code}\n# This is my first example script\n# 25 Jan 2023\n\n# packages I need\nusing DataFrames, Plots, Random, StatsPlots\n```\n:::\n\n\n\n\n\n\nSecond, let's make some variables and see how Julia prints them to the screen\n\n\n\n\n::: {#6 .cell execution_count=1}\n``` {.julia .cell-code}\n# make two variables using the rand function\n# because we are using random numbers, we'll set the seed here for reproducibility\n\nRandom.seed!(12345)\n\nx = rand(10)\ny = rand(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n10-element Vector{Float64}:\n 0.3302627700323072\n 0.4219866389257305\n 0.6853069230253171\n 0.29579983859112813\n 0.9736588395655787\n 0.24458973555203245\n 0.46875054050900267\n 0.27705458732580956\n 0.6299157011197652\n 0.12180466275080659\n```\n:::\n:::\n\n\n\n\n\n\nCool. Now, lets create two data frames, one made of the x and y variables, and another with three variables made directly in a call to `DataFrame`.\n\n\n\n\n::: {#8 .cell execution_count=1}\n``` {.julia .cell-code}\n# combine into a data frame using the DataFrame function\ndf = DataFrame(x = x, y = y)\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div><div style = \"float: left;\"><span>10×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">x</th><th style = \"text-align: left;\">y</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">0.791805</td><td style = \"text-align: right;\">0.330263</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">0.159579</td><td style = \"text-align: right;\">0.421987</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">0.334191</td><td style = \"text-align: right;\">0.685307</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">0.811392</td><td style = \"text-align: right;\">0.2958</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">0.796629</td><td style = \"text-align: right;\">0.973659</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">0.917814</td><td style = \"text-align: right;\">0.24459</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">0.311327</td><td style = \"text-align: right;\">0.468751</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: right;\">0.752906</td><td style = \"text-align: right;\">0.277055</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: right;\">0.633848</td><td style = \"text-align: right;\">0.629916</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: right;\">0.899951</td><td style = \"text-align: right;\">0.121805</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n\n\n\n\n...and the second\n\n\n\n\n::: {#10 .cell execution_count=1}\n``` {.julia .cell-code}\n# make a second data frame with three variables\n# using DataFrame directly to create variables\ndf2 = DataFrame(a=1:10, b=10*rand(10), c=10*rand(10))\ndf2\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div><div style = \"float: left;\"><span>10×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">a</th><th style = \"text-align: left;\">b</th><th style = \"text-align: left;\">c</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">0.563403</td><td style = \"text-align: right;\">9.77384</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">7.22679</td><td style = \"text-align: right;\">3.58869</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">0.466642</td><td style = \"text-align: right;\">3.76688</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">4.59489</td><td style = \"text-align: right;\">9.03599</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">0.491108</td><td style = \"text-align: right;\">8.73964</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">6.99192</td><td style = \"text-align: right;\">1.36299</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">1.58122</td><td style = \"text-align: right;\">0.815793</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: right;\">8</td><td style = \"text-align: right;\">4.70745</td><td style = \"text-align: right;\">3.75399</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: right;\">9</td><td style = \"text-align: right;\">4.97572</td><td style = \"text-align: right;\">0.599761</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: right;\">10</td><td style = \"text-align: right;\">4.58675</td><td style = \"text-align: right;\">2.14792</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n\n\n\n\nGreat. Now, lets see how to plot the 'solo' variables. Note how we specify the `seriestype`. Try getting rid of this....\n\n\n\n\n::: {#12 .cell execution_count=1}\n``` {.julia .cell-code}\n# plot the data using x and y, as a scatterplot\nplot(x, y, seriestype=:scatter)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip330\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip330)\" d=\"M0 1920 L2688 1920 L2688 -4.26326e-14 L0 -4.26326e-14  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip331\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip330)\" d=\"M159.478 1800.78 L2640.76 1800.78 L2640.76 47.2441 L159.478 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip332\">\n    <rect x=\"159\" y=\"47\" width=\"2482\" height=\"1755\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"354.491,1800.78 354.491,47.2441 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"971.933,1800.78 971.933,47.2441 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1589.37,1800.78 1589.37,47.2441 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2206.82,1800.78 2206.82,47.2441 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,1599.3 2640.76,1599.3 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,1210.9 2640.76,1210.9 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,822.508 2640.76,822.508 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,434.113 2640.76,434.113 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1800.78 2640.76,1800.78 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"354.491,1800.78 354.491,1781.88 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"971.933,1800.78 971.933,1781.88 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1589.37,1800.78 1589.37,1781.88 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2206.82,1800.78 2206.82,1781.88 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M332.674 1834 Q329.063 1834 327.234 1837.57 Q325.429 1841.11 325.429 1848.24 Q325.429 1855.34 327.234 1858.91 Q329.063 1862.45 332.674 1862.45 Q336.308 1862.45 338.114 1858.91 Q339.943 1855.34 339.943 1848.24 Q339.943 1841.11 338.114 1837.57 Q336.308 1834 332.674 1834 M332.674 1830.3 Q338.484 1830.3 341.54 1834.9 Q344.618 1839.49 344.618 1848.24 Q344.618 1856.96 341.54 1861.57 Q338.484 1866.15 332.674 1866.15 Q326.864 1866.15 323.785 1861.57 Q320.73 1856.96 320.73 1848.24 Q320.73 1839.49 323.785 1834.9 Q326.864 1830.3 332.674 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M352.836 1859.6 L357.72 1859.6 L357.72 1865.48 L352.836 1865.48 L352.836 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M371.933 1861.55 L388.252 1861.55 L388.252 1865.48 L366.308 1865.48 L366.308 1861.55 Q368.97 1858.79 373.553 1854.16 Q378.16 1849.51 379.34 1848.17 Q381.586 1845.65 382.465 1843.91 Q383.368 1842.15 383.368 1840.46 Q383.368 1837.71 381.424 1835.97 Q379.503 1834.23 376.401 1834.23 Q374.202 1834.23 371.748 1835 Q369.317 1835.76 366.54 1837.31 L366.54 1832.59 Q369.364 1831.46 371.817 1830.88 Q374.271 1830.3 376.308 1830.3 Q381.678 1830.3 384.873 1832.98 Q388.067 1835.67 388.067 1840.16 Q388.067 1842.29 387.257 1844.21 Q386.47 1846.11 384.364 1848.7 Q383.785 1849.37 380.683 1852.59 Q377.581 1855.78 371.933 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M949.074 1834 Q945.463 1834 943.634 1837.57 Q941.829 1841.11 941.829 1848.24 Q941.829 1855.34 943.634 1858.91 Q945.463 1862.45 949.074 1862.45 Q952.708 1862.45 954.514 1858.91 Q956.342 1855.34 956.342 1848.24 Q956.342 1841.11 954.514 1837.57 Q952.708 1834 949.074 1834 M949.074 1830.3 Q954.884 1830.3 957.94 1834.9 Q961.018 1839.49 961.018 1848.24 Q961.018 1856.96 957.94 1861.57 Q954.884 1866.15 949.074 1866.15 Q943.264 1866.15 940.185 1861.57 Q937.129 1856.96 937.129 1848.24 Q937.129 1839.49 940.185 1834.9 Q943.264 1830.3 949.074 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M969.236 1859.6 L974.12 1859.6 L974.12 1865.48 L969.236 1865.48 L969.236 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M997.152 1835 L985.347 1853.45 L997.152 1853.45 L997.152 1835 M995.925 1830.92 L1001.81 1830.92 L1001.81 1853.45 L1006.74 1853.45 L1006.74 1857.34 L1001.81 1857.34 L1001.81 1865.48 L997.152 1865.48 L997.152 1857.34 L981.551 1857.34 L981.551 1852.82 L995.925 1830.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1566.68 1834 Q1563.07 1834 1561.24 1837.57 Q1559.43 1841.11 1559.43 1848.24 Q1559.43 1855.34 1561.24 1858.91 Q1563.07 1862.45 1566.68 1862.45 Q1570.31 1862.45 1572.12 1858.91 Q1573.95 1855.34 1573.95 1848.24 Q1573.95 1841.11 1572.12 1837.57 Q1570.31 1834 1566.68 1834 M1566.68 1830.3 Q1572.49 1830.3 1575.54 1834.9 Q1578.62 1839.49 1578.62 1848.24 Q1578.62 1856.96 1575.54 1861.57 Q1572.49 1866.15 1566.68 1866.15 Q1560.87 1866.15 1557.79 1861.57 Q1554.73 1856.96 1554.73 1848.24 Q1554.73 1839.49 1557.79 1834.9 Q1560.87 1830.3 1566.68 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1586.84 1859.6 L1591.72 1859.6 L1591.72 1865.48 L1586.84 1865.48 L1586.84 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1612.49 1846.34 Q1609.34 1846.34 1607.49 1848.49 Q1605.66 1850.65 1605.66 1854.4 Q1605.66 1858.12 1607.49 1860.3 Q1609.34 1862.45 1612.49 1862.45 Q1615.64 1862.45 1617.46 1860.3 Q1619.32 1858.12 1619.32 1854.4 Q1619.32 1850.65 1617.46 1848.49 Q1615.64 1846.34 1612.49 1846.34 M1621.77 1831.69 L1621.77 1835.95 Q1620.01 1835.11 1618.2 1834.67 Q1616.42 1834.23 1614.66 1834.23 Q1610.03 1834.23 1607.58 1837.36 Q1605.15 1840.48 1604.8 1846.8 Q1606.17 1844.79 1608.23 1843.72 Q1610.29 1842.64 1612.77 1842.64 Q1617.97 1842.64 1620.98 1845.81 Q1624.01 1848.96 1624.01 1854.4 Q1624.01 1859.72 1620.87 1862.94 Q1617.72 1866.15 1612.49 1866.15 Q1606.49 1866.15 1603.32 1861.57 Q1600.15 1856.96 1600.15 1848.24 Q1600.15 1840.04 1604.04 1835.18 Q1607.93 1830.3 1614.48 1830.3 Q1616.24 1830.3 1618.02 1830.65 Q1619.83 1830.99 1621.77 1831.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2184.25 1834 Q2180.63 1834 2178.81 1837.57 Q2177 1841.11 2177 1848.24 Q2177 1855.34 2178.81 1858.91 Q2180.63 1862.45 2184.25 1862.45 Q2187.88 1862.45 2189.69 1858.91 Q2191.51 1855.34 2191.51 1848.24 Q2191.51 1841.11 2189.69 1837.57 Q2187.88 1834 2184.25 1834 M2184.25 1830.3 Q2190.06 1830.3 2193.11 1834.9 Q2196.19 1839.49 2196.19 1848.24 Q2196.19 1856.96 2193.11 1861.57 Q2190.06 1866.15 2184.25 1866.15 Q2178.44 1866.15 2175.36 1861.57 Q2172.3 1856.96 2172.3 1848.24 Q2172.3 1839.49 2175.36 1834.9 Q2178.44 1830.3 2184.25 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2204.41 1859.6 L2209.29 1859.6 L2209.29 1865.48 L2204.41 1865.48 L2204.41 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2229.48 1849.07 Q2226.14 1849.07 2224.22 1850.85 Q2222.32 1852.64 2222.32 1855.76 Q2222.32 1858.89 2224.22 1860.67 Q2226.14 1862.45 2229.48 1862.45 Q2232.81 1862.45 2234.73 1860.67 Q2236.65 1858.86 2236.65 1855.76 Q2236.65 1852.64 2234.73 1850.85 Q2232.83 1849.07 2229.48 1849.07 M2224.8 1847.08 Q2221.79 1846.34 2220.1 1844.28 Q2218.44 1842.22 2218.44 1839.26 Q2218.44 1835.11 2221.38 1832.71 Q2224.34 1830.3 2229.48 1830.3 Q2234.64 1830.3 2237.58 1832.71 Q2240.52 1835.11 2240.52 1839.26 Q2240.52 1842.22 2238.83 1844.28 Q2237.16 1846.34 2234.18 1847.08 Q2237.56 1847.87 2239.43 1850.16 Q2241.33 1852.45 2241.33 1855.76 Q2241.33 1860.78 2238.25 1863.47 Q2235.19 1866.15 2229.48 1866.15 Q2223.76 1866.15 2220.68 1863.47 Q2217.63 1860.78 2217.63 1855.76 Q2217.63 1852.45 2219.52 1850.16 Q2221.42 1847.87 2224.8 1847.08 M2223.09 1839.7 Q2223.09 1842.38 2224.76 1843.89 Q2226.44 1845.39 2229.48 1845.39 Q2232.49 1845.39 2234.18 1843.89 Q2235.89 1842.38 2235.89 1839.7 Q2235.89 1837.01 2234.18 1835.51 Q2232.49 1834 2229.48 1834 Q2226.44 1834 2224.76 1835.51 Q2223.09 1837.01 2223.09 1839.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1800.78 159.478,47.2441 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1599.3 178.376,1599.3 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1210.9 178.376,1210.9 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,822.508 178.376,822.508 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,434.113 178.376,434.113 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M63.5798 1585.1 Q59.9687 1585.1 58.14 1588.66 Q56.3345 1592.2 56.3345 1599.33 Q56.3345 1606.44 58.14 1610 Q59.9687 1613.55 63.5798 1613.55 Q67.2141 1613.55 69.0196 1610 Q70.8483 1606.44 70.8483 1599.33 Q70.8483 1592.2 69.0196 1588.66 Q67.2141 1585.1 63.5798 1585.1 M63.5798 1581.39 Q69.39 1581.39 72.4455 1586 Q75.5242 1590.58 75.5242 1599.33 Q75.5242 1608.06 72.4455 1612.67 Q69.39 1617.25 63.5798 1617.25 Q57.7697 1617.25 54.691 1612.67 Q51.6354 1608.06 51.6354 1599.33 Q51.6354 1590.58 54.691 1586 Q57.7697 1581.39 63.5798 1581.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M83.7418 1610.7 L88.626 1610.7 L88.626 1616.58 L83.7418 1616.58 L83.7418 1610.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M102.839 1612.64 L119.158 1612.64 L119.158 1616.58 L97.2139 1616.58 L97.2139 1612.64 Q99.8759 1609.89 104.459 1605.26 Q109.066 1600.61 110.246 1599.26 Q112.492 1596.74 113.371 1595 Q114.274 1593.24 114.274 1591.55 Q114.274 1588.8 112.33 1587.06 Q110.408 1585.33 107.306 1585.33 Q105.107 1585.33 102.654 1586.09 Q100.223 1586.86 97.4454 1588.41 L97.4454 1583.68 Q100.269 1582.55 102.723 1581.97 Q105.177 1581.39 107.214 1581.39 Q112.584 1581.39 115.779 1584.08 Q118.973 1586.76 118.973 1591.25 Q118.973 1593.38 118.163 1595.3 Q117.376 1597.2 115.269 1599.8 Q114.691 1600.47 111.589 1603.68 Q108.487 1606.88 102.839 1612.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M61.4965 1196.7 Q57.8854 1196.7 56.0567 1200.27 Q54.2512 1203.81 54.2512 1210.94 Q54.2512 1218.04 56.0567 1221.61 Q57.8854 1225.15 61.4965 1225.15 Q65.1307 1225.15 66.9363 1221.61 Q68.765 1218.04 68.765 1210.94 Q68.765 1203.81 66.9363 1200.27 Q65.1307 1196.7 61.4965 1196.7 M61.4965 1193 Q67.3067 1193 70.3622 1197.6 Q73.4409 1202.19 73.4409 1210.94 Q73.4409 1219.66 70.3622 1224.27 Q67.3067 1228.85 61.4965 1228.85 Q55.6864 1228.85 52.6077 1224.27 Q49.5521 1219.66 49.5521 1210.94 Q49.5521 1202.19 52.6077 1197.6 Q55.6864 1193 61.4965 1193 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M81.6584 1222.3 L86.5427 1222.3 L86.5427 1228.18 L81.6584 1228.18 L81.6584 1222.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M109.575 1197.7 L97.7695 1216.15 L109.575 1216.15 L109.575 1197.7 M108.348 1193.62 L114.228 1193.62 L114.228 1216.15 L119.158 1216.15 L119.158 1220.03 L114.228 1220.03 L114.228 1228.18 L109.575 1228.18 L109.575 1220.03 L93.9732 1220.03 L93.9732 1215.52 L108.348 1193.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M61.8206 808.307 Q58.2095 808.307 56.3808 811.872 Q54.5752 815.413 54.5752 822.543 Q54.5752 829.649 56.3808 833.214 Q58.2095 836.756 61.8206 836.756 Q65.4548 836.756 67.2604 833.214 Q69.0891 829.649 69.0891 822.543 Q69.0891 815.413 67.2604 811.872 Q65.4548 808.307 61.8206 808.307 M61.8206 804.603 Q67.6307 804.603 70.6863 809.21 Q73.765 813.793 73.765 822.543 Q73.765 831.27 70.6863 835.876 Q67.6307 840.459 61.8206 840.459 Q56.0104 840.459 52.9317 835.876 Q49.8762 831.27 49.8762 822.543 Q49.8762 813.793 52.9317 809.21 Q56.0104 804.603 61.8206 804.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M81.9825 833.909 L86.8667 833.909 L86.8667 839.788 L81.9825 839.788 L81.9825 833.909 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M107.631 820.645 Q104.482 820.645 102.631 822.797 Q100.802 824.95 100.802 828.7 Q100.802 832.427 102.631 834.603 Q104.482 836.756 107.631 836.756 Q110.779 836.756 112.607 834.603 Q114.459 832.427 114.459 828.7 Q114.459 824.95 112.607 822.797 Q110.779 820.645 107.631 820.645 M116.913 805.992 L116.913 810.251 Q115.154 809.418 113.348 808.978 Q111.566 808.538 109.806 808.538 Q105.177 808.538 102.723 811.663 Q100.293 814.788 99.9454 821.108 Q101.311 819.094 103.371 818.029 Q105.431 816.941 107.908 816.941 Q113.117 816.941 116.126 820.112 Q119.158 823.26 119.158 828.7 Q119.158 834.024 116.01 837.242 Q112.862 840.459 107.631 840.459 Q101.635 840.459 98.4639 835.876 Q95.2926 831.27 95.2926 822.543 Q95.2926 814.348 99.1815 809.487 Q103.07 804.603 109.621 804.603 Q111.38 804.603 113.163 804.95 Q114.968 805.298 116.913 805.992 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M62.0752 419.912 Q58.4641 419.912 56.6354 423.477 Q54.8299 427.018 54.8299 434.148 Q54.8299 441.255 56.6354 444.819 Q58.4641 448.361 62.0752 448.361 Q65.7094 448.361 67.515 444.819 Q69.3437 441.255 69.3437 434.148 Q69.3437 427.018 67.515 423.477 Q65.7094 419.912 62.0752 419.912 M62.0752 416.208 Q67.8854 416.208 70.9409 420.815 Q74.0196 425.398 74.0196 434.148 Q74.0196 442.875 70.9409 447.481 Q67.8854 452.065 62.0752 452.065 Q56.2651 452.065 53.1864 447.481 Q50.1308 442.875 50.1308 434.148 Q50.1308 425.398 53.1864 420.815 Q56.2651 416.208 62.0752 416.208 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M82.2371 445.514 L87.1214 445.514 L87.1214 451.393 L82.2371 451.393 L82.2371 445.514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M107.306 434.981 Q103.973 434.981 102.052 436.764 Q100.154 438.546 100.154 441.671 Q100.154 444.796 102.052 446.579 Q103.973 448.361 107.306 448.361 Q110.64 448.361 112.561 446.579 Q114.482 444.773 114.482 441.671 Q114.482 438.546 112.561 436.764 Q110.663 434.981 107.306 434.981 M102.631 432.991 Q99.6213 432.25 97.9315 430.19 Q96.2648 428.13 96.2648 425.167 Q96.2648 421.023 99.2046 418.616 Q102.168 416.208 107.306 416.208 Q112.468 416.208 115.408 418.616 Q118.348 421.023 118.348 425.167 Q118.348 428.13 116.658 430.19 Q114.992 432.25 112.005 432.991 Q115.385 433.778 117.26 436.069 Q119.158 438.361 119.158 441.671 Q119.158 446.694 116.08 449.379 Q113.024 452.065 107.306 452.065 Q101.589 452.065 98.5102 449.379 Q95.4547 446.694 95.4547 441.671 Q95.4547 438.361 97.3528 436.069 Q99.2509 433.778 102.631 432.991 M100.918 425.606 Q100.918 428.292 102.584 429.796 Q104.274 431.301 107.306 431.301 Q110.316 431.301 112.005 429.796 Q113.718 428.292 113.718 425.606 Q113.718 422.921 112.005 421.417 Q110.316 419.912 107.306 419.912 Q104.274 419.912 102.584 421.417 Q100.918 422.921 100.918 425.606 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip332)\" cx=\"2181.52\" cy=\"1346.33\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"229.703\" cy=\"1168.21\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"768.768\" cy=\"656.844\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"2241.99\" cy=\"1413.26\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"2196.41\" cy=\"96.8724\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"2570.53\" cy=\"1512.71\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"698.18\" cy=\"1077.39\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"2061.43\" cy=\"1449.66\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"1693.87\" cy=\"764.413\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip332)\" cx=\"2515.39\" cy=\"1751.15\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<path clip-path=\"url(#clip330)\" d=\"M242.187 209.375 L542.746 209.375 L542.746 105.695 L242.187 105.695  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"242.187,209.375 542.746,209.375 542.746,105.695 242.187,105.695 242.187,209.375 \"/>\n<circle clip-path=\"url(#clip330)\" cx=\"352.466\" cy=\"157.535\" r=\"20.48\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"5.46133\"/>\n<path clip-path=\"url(#clip330)\" d=\"M476.588 177.223 Q474.782 181.852 473.07 183.264 Q471.357 184.676 468.486 184.676 L465.083 184.676 L465.083 181.112 L467.583 181.112 Q469.343 181.112 470.315 180.278 Q471.287 179.445 472.468 176.343 L473.232 174.399 L462.746 148.889 L467.259 148.889 L475.361 169.167 L483.463 148.889 L487.977 148.889 L476.588 177.223 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M495.268 170.88 L502.907 170.88 L502.907 144.515 L494.597 146.181 L494.597 141.922 L502.861 140.255 L507.537 140.255 L507.537 170.88 L515.176 170.88 L515.176 174.815 L495.268 174.815 L495.268 170.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n```\n:::\n:::\n\n\n\n\n\n\nSuperb. So, `StatsPlots` provides a special macro to use a dataframe with plots. It's a three step process:\n\n1.  declare the `@df` macro\n2.  define the data frame\n3.  declare the columns, using the `:`\n\n\n\n\n::: {#14 .cell execution_count=1}\n``` {.julia .cell-code}\n# plot the data using the data frame macro\n# declare the df macro, declare the data frame, use : to signify columns\n@df df plot(:x, :y)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip390\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip390)\" d=\"M0 1920 L2688 1920 L2688 -4.26326e-14 L0 -4.26326e-14  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip391\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip390)\" d=\"M159.478 1800.78 L2640.76 1800.78 L2640.76 47.2441 L159.478 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip392\">\n    <rect x=\"159\" y=\"47\" width=\"2482\" height=\"1755\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"354.491,1800.78 354.491,47.2441 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"971.933,1800.78 971.933,47.2441 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1589.37,1800.78 1589.37,47.2441 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2206.82,1800.78 2206.82,47.2441 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,1599.3 2640.76,1599.3 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,1210.9 2640.76,1210.9 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,822.508 2640.76,822.508 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"159.478,434.113 2640.76,434.113 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1800.78 2640.76,1800.78 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"354.491,1800.78 354.491,1781.88 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"971.933,1800.78 971.933,1781.88 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1589.37,1800.78 1589.37,1781.88 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2206.82,1800.78 2206.82,1781.88 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M332.674 1834 Q329.063 1834 327.234 1837.57 Q325.429 1841.11 325.429 1848.24 Q325.429 1855.34 327.234 1858.91 Q329.063 1862.45 332.674 1862.45 Q336.308 1862.45 338.114 1858.91 Q339.943 1855.34 339.943 1848.24 Q339.943 1841.11 338.114 1837.57 Q336.308 1834 332.674 1834 M332.674 1830.3 Q338.484 1830.3 341.54 1834.9 Q344.618 1839.49 344.618 1848.24 Q344.618 1856.96 341.54 1861.57 Q338.484 1866.15 332.674 1866.15 Q326.864 1866.15 323.785 1861.57 Q320.73 1856.96 320.73 1848.24 Q320.73 1839.49 323.785 1834.9 Q326.864 1830.3 332.674 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M352.836 1859.6 L357.72 1859.6 L357.72 1865.48 L352.836 1865.48 L352.836 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M371.933 1861.55 L388.252 1861.55 L388.252 1865.48 L366.308 1865.48 L366.308 1861.55 Q368.97 1858.79 373.553 1854.16 Q378.16 1849.51 379.34 1848.17 Q381.586 1845.65 382.465 1843.91 Q383.368 1842.15 383.368 1840.46 Q383.368 1837.71 381.424 1835.97 Q379.503 1834.23 376.401 1834.23 Q374.202 1834.23 371.748 1835 Q369.317 1835.76 366.54 1837.31 L366.54 1832.59 Q369.364 1831.46 371.817 1830.88 Q374.271 1830.3 376.308 1830.3 Q381.678 1830.3 384.873 1832.98 Q388.067 1835.67 388.067 1840.16 Q388.067 1842.29 387.257 1844.21 Q386.47 1846.11 384.364 1848.7 Q383.785 1849.37 380.683 1852.59 Q377.581 1855.78 371.933 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M949.074 1834 Q945.463 1834 943.634 1837.57 Q941.829 1841.11 941.829 1848.24 Q941.829 1855.34 943.634 1858.91 Q945.463 1862.45 949.074 1862.45 Q952.708 1862.45 954.514 1858.91 Q956.342 1855.34 956.342 1848.24 Q956.342 1841.11 954.514 1837.57 Q952.708 1834 949.074 1834 M949.074 1830.3 Q954.884 1830.3 957.94 1834.9 Q961.018 1839.49 961.018 1848.24 Q961.018 1856.96 957.94 1861.57 Q954.884 1866.15 949.074 1866.15 Q943.264 1866.15 940.185 1861.57 Q937.129 1856.96 937.129 1848.24 Q937.129 1839.49 940.185 1834.9 Q943.264 1830.3 949.074 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M969.236 1859.6 L974.12 1859.6 L974.12 1865.48 L969.236 1865.48 L969.236 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M997.152 1835 L985.347 1853.45 L997.152 1853.45 L997.152 1835 M995.925 1830.92 L1001.81 1830.92 L1001.81 1853.45 L1006.74 1853.45 L1006.74 1857.34 L1001.81 1857.34 L1001.81 1865.48 L997.152 1865.48 L997.152 1857.34 L981.551 1857.34 L981.551 1852.82 L995.925 1830.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1566.68 1834 Q1563.07 1834 1561.24 1837.57 Q1559.43 1841.11 1559.43 1848.24 Q1559.43 1855.34 1561.24 1858.91 Q1563.07 1862.45 1566.68 1862.45 Q1570.31 1862.45 1572.12 1858.91 Q1573.95 1855.34 1573.95 1848.24 Q1573.95 1841.11 1572.12 1837.57 Q1570.31 1834 1566.68 1834 M1566.68 1830.3 Q1572.49 1830.3 1575.54 1834.9 Q1578.62 1839.49 1578.62 1848.24 Q1578.62 1856.96 1575.54 1861.57 Q1572.49 1866.15 1566.68 1866.15 Q1560.87 1866.15 1557.79 1861.57 Q1554.73 1856.96 1554.73 1848.24 Q1554.73 1839.49 1557.79 1834.9 Q1560.87 1830.3 1566.68 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1586.84 1859.6 L1591.72 1859.6 L1591.72 1865.48 L1586.84 1865.48 L1586.84 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1612.49 1846.34 Q1609.34 1846.34 1607.49 1848.49 Q1605.66 1850.65 1605.66 1854.4 Q1605.66 1858.12 1607.49 1860.3 Q1609.34 1862.45 1612.49 1862.45 Q1615.64 1862.45 1617.46 1860.3 Q1619.32 1858.12 1619.32 1854.4 Q1619.32 1850.65 1617.46 1848.49 Q1615.64 1846.34 1612.49 1846.34 M1621.77 1831.69 L1621.77 1835.95 Q1620.01 1835.11 1618.2 1834.67 Q1616.42 1834.23 1614.66 1834.23 Q1610.03 1834.23 1607.58 1837.36 Q1605.15 1840.48 1604.8 1846.8 Q1606.17 1844.79 1608.23 1843.72 Q1610.29 1842.64 1612.77 1842.64 Q1617.97 1842.64 1620.98 1845.81 Q1624.01 1848.96 1624.01 1854.4 Q1624.01 1859.72 1620.87 1862.94 Q1617.72 1866.15 1612.49 1866.15 Q1606.49 1866.15 1603.32 1861.57 Q1600.15 1856.96 1600.15 1848.24 Q1600.15 1840.04 1604.04 1835.18 Q1607.93 1830.3 1614.48 1830.3 Q1616.24 1830.3 1618.02 1830.65 Q1619.83 1830.99 1621.77 1831.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2184.25 1834 Q2180.63 1834 2178.81 1837.57 Q2177 1841.11 2177 1848.24 Q2177 1855.34 2178.81 1858.91 Q2180.63 1862.45 2184.25 1862.45 Q2187.88 1862.45 2189.69 1858.91 Q2191.51 1855.34 2191.51 1848.24 Q2191.51 1841.11 2189.69 1837.57 Q2187.88 1834 2184.25 1834 M2184.25 1830.3 Q2190.06 1830.3 2193.11 1834.9 Q2196.19 1839.49 2196.19 1848.24 Q2196.19 1856.96 2193.11 1861.57 Q2190.06 1866.15 2184.25 1866.15 Q2178.44 1866.15 2175.36 1861.57 Q2172.3 1856.96 2172.3 1848.24 Q2172.3 1839.49 2175.36 1834.9 Q2178.44 1830.3 2184.25 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2204.41 1859.6 L2209.29 1859.6 L2209.29 1865.48 L2204.41 1865.48 L2204.41 1859.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2229.48 1849.07 Q2226.14 1849.07 2224.22 1850.85 Q2222.32 1852.64 2222.32 1855.76 Q2222.32 1858.89 2224.22 1860.67 Q2226.14 1862.45 2229.48 1862.45 Q2232.81 1862.45 2234.73 1860.67 Q2236.65 1858.86 2236.65 1855.76 Q2236.65 1852.64 2234.73 1850.85 Q2232.83 1849.07 2229.48 1849.07 M2224.8 1847.08 Q2221.79 1846.34 2220.1 1844.28 Q2218.44 1842.22 2218.44 1839.26 Q2218.44 1835.11 2221.38 1832.71 Q2224.34 1830.3 2229.48 1830.3 Q2234.64 1830.3 2237.58 1832.71 Q2240.52 1835.11 2240.52 1839.26 Q2240.52 1842.22 2238.83 1844.28 Q2237.16 1846.34 2234.18 1847.08 Q2237.56 1847.87 2239.43 1850.16 Q2241.33 1852.45 2241.33 1855.76 Q2241.33 1860.78 2238.25 1863.47 Q2235.19 1866.15 2229.48 1866.15 Q2223.76 1866.15 2220.68 1863.47 Q2217.63 1860.78 2217.63 1855.76 Q2217.63 1852.45 2219.52 1850.16 Q2221.42 1847.87 2224.8 1847.08 M2223.09 1839.7 Q2223.09 1842.38 2224.76 1843.89 Q2226.44 1845.39 2229.48 1845.39 Q2232.49 1845.39 2234.18 1843.89 Q2235.89 1842.38 2235.89 1839.7 Q2235.89 1837.01 2234.18 1835.51 Q2232.49 1834 2229.48 1834 Q2226.44 1834 2224.76 1835.51 Q2223.09 1837.01 2223.09 1839.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1800.78 159.478,47.2441 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1599.3 178.376,1599.3 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,1210.9 178.376,1210.9 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,822.508 178.376,822.508 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"159.478,434.113 178.376,434.113 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M63.5798 1585.1 Q59.9687 1585.1 58.14 1588.66 Q56.3345 1592.2 56.3345 1599.33 Q56.3345 1606.44 58.14 1610 Q59.9687 1613.55 63.5798 1613.55 Q67.2141 1613.55 69.0196 1610 Q70.8483 1606.44 70.8483 1599.33 Q70.8483 1592.2 69.0196 1588.66 Q67.2141 1585.1 63.5798 1585.1 M63.5798 1581.39 Q69.39 1581.39 72.4455 1586 Q75.5242 1590.58 75.5242 1599.33 Q75.5242 1608.06 72.4455 1612.67 Q69.39 1617.25 63.5798 1617.25 Q57.7697 1617.25 54.691 1612.67 Q51.6354 1608.06 51.6354 1599.33 Q51.6354 1590.58 54.691 1586 Q57.7697 1581.39 63.5798 1581.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M83.7418 1610.7 L88.626 1610.7 L88.626 1616.58 L83.7418 1616.58 L83.7418 1610.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M102.839 1612.64 L119.158 1612.64 L119.158 1616.58 L97.2139 1616.58 L97.2139 1612.64 Q99.8759 1609.89 104.459 1605.26 Q109.066 1600.61 110.246 1599.26 Q112.492 1596.74 113.371 1595 Q114.274 1593.24 114.274 1591.55 Q114.274 1588.8 112.33 1587.06 Q110.408 1585.33 107.306 1585.33 Q105.107 1585.33 102.654 1586.09 Q100.223 1586.86 97.4454 1588.41 L97.4454 1583.68 Q100.269 1582.55 102.723 1581.97 Q105.177 1581.39 107.214 1581.39 Q112.584 1581.39 115.779 1584.08 Q118.973 1586.76 118.973 1591.25 Q118.973 1593.38 118.163 1595.3 Q117.376 1597.2 115.269 1599.8 Q114.691 1600.47 111.589 1603.68 Q108.487 1606.88 102.839 1612.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M61.4965 1196.7 Q57.8854 1196.7 56.0567 1200.27 Q54.2512 1203.81 54.2512 1210.94 Q54.2512 1218.04 56.0567 1221.61 Q57.8854 1225.15 61.4965 1225.15 Q65.1307 1225.15 66.9363 1221.61 Q68.765 1218.04 68.765 1210.94 Q68.765 1203.81 66.9363 1200.27 Q65.1307 1196.7 61.4965 1196.7 M61.4965 1193 Q67.3067 1193 70.3622 1197.6 Q73.4409 1202.19 73.4409 1210.94 Q73.4409 1219.66 70.3622 1224.27 Q67.3067 1228.85 61.4965 1228.85 Q55.6864 1228.85 52.6077 1224.27 Q49.5521 1219.66 49.5521 1210.94 Q49.5521 1202.19 52.6077 1197.6 Q55.6864 1193 61.4965 1193 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M81.6584 1222.3 L86.5427 1222.3 L86.5427 1228.18 L81.6584 1228.18 L81.6584 1222.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M109.575 1197.7 L97.7695 1216.15 L109.575 1216.15 L109.575 1197.7 M108.348 1193.62 L114.228 1193.62 L114.228 1216.15 L119.158 1216.15 L119.158 1220.03 L114.228 1220.03 L114.228 1228.18 L109.575 1228.18 L109.575 1220.03 L93.9732 1220.03 L93.9732 1215.52 L108.348 1193.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M61.8206 808.307 Q58.2095 808.307 56.3808 811.872 Q54.5752 815.413 54.5752 822.543 Q54.5752 829.649 56.3808 833.214 Q58.2095 836.756 61.8206 836.756 Q65.4548 836.756 67.2604 833.214 Q69.0891 829.649 69.0891 822.543 Q69.0891 815.413 67.2604 811.872 Q65.4548 808.307 61.8206 808.307 M61.8206 804.603 Q67.6307 804.603 70.6863 809.21 Q73.765 813.793 73.765 822.543 Q73.765 831.27 70.6863 835.876 Q67.6307 840.459 61.8206 840.459 Q56.0104 840.459 52.9317 835.876 Q49.8762 831.27 49.8762 822.543 Q49.8762 813.793 52.9317 809.21 Q56.0104 804.603 61.8206 804.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M81.9825 833.909 L86.8667 833.909 L86.8667 839.788 L81.9825 839.788 L81.9825 833.909 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M107.631 820.645 Q104.482 820.645 102.631 822.797 Q100.802 824.95 100.802 828.7 Q100.802 832.427 102.631 834.603 Q104.482 836.756 107.631 836.756 Q110.779 836.756 112.607 834.603 Q114.459 832.427 114.459 828.7 Q114.459 824.95 112.607 822.797 Q110.779 820.645 107.631 820.645 M116.913 805.992 L116.913 810.251 Q115.154 809.418 113.348 808.978 Q111.566 808.538 109.806 808.538 Q105.177 808.538 102.723 811.663 Q100.293 814.788 99.9454 821.108 Q101.311 819.094 103.371 818.029 Q105.431 816.941 107.908 816.941 Q113.117 816.941 116.126 820.112 Q119.158 823.26 119.158 828.7 Q119.158 834.024 116.01 837.242 Q112.862 840.459 107.631 840.459 Q101.635 840.459 98.4639 835.876 Q95.2926 831.27 95.2926 822.543 Q95.2926 814.348 99.1815 809.487 Q103.07 804.603 109.621 804.603 Q111.38 804.603 113.163 804.95 Q114.968 805.298 116.913 805.992 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M62.0752 419.912 Q58.4641 419.912 56.6354 423.477 Q54.8299 427.018 54.8299 434.148 Q54.8299 441.255 56.6354 444.819 Q58.4641 448.361 62.0752 448.361 Q65.7094 448.361 67.515 444.819 Q69.3437 441.255 69.3437 434.148 Q69.3437 427.018 67.515 423.477 Q65.7094 419.912 62.0752 419.912 M62.0752 416.208 Q67.8854 416.208 70.9409 420.815 Q74.0196 425.398 74.0196 434.148 Q74.0196 442.875 70.9409 447.481 Q67.8854 452.065 62.0752 452.065 Q56.2651 452.065 53.1864 447.481 Q50.1308 442.875 50.1308 434.148 Q50.1308 425.398 53.1864 420.815 Q56.2651 416.208 62.0752 416.208 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M82.2371 445.514 L87.1214 445.514 L87.1214 451.393 L82.2371 451.393 L82.2371 445.514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M107.306 434.981 Q103.973 434.981 102.052 436.764 Q100.154 438.546 100.154 441.671 Q100.154 444.796 102.052 446.579 Q103.973 448.361 107.306 448.361 Q110.64 448.361 112.561 446.579 Q114.482 444.773 114.482 441.671 Q114.482 438.546 112.561 436.764 Q110.663 434.981 107.306 434.981 M102.631 432.991 Q99.6213 432.25 97.9315 430.19 Q96.2648 428.13 96.2648 425.167 Q96.2648 421.023 99.2046 418.616 Q102.168 416.208 107.306 416.208 Q112.468 416.208 115.408 418.616 Q118.348 421.023 118.348 425.167 Q118.348 428.13 116.658 430.19 Q114.992 432.25 112.005 432.991 Q115.385 433.778 117.26 436.069 Q119.158 438.361 119.158 441.671 Q119.158 446.694 116.08 449.379 Q113.024 452.065 107.306 452.065 Q101.589 452.065 98.5102 449.379 Q95.4547 446.694 95.4547 441.671 Q95.4547 438.361 97.3528 436.069 Q99.2509 433.778 102.631 432.991 M100.918 425.606 Q100.918 428.292 102.584 429.796 Q104.274 431.301 107.306 431.301 Q110.316 431.301 112.005 429.796 Q113.718 428.292 113.718 425.606 Q113.718 422.921 112.005 421.417 Q110.316 419.912 107.306 419.912 Q104.274 419.912 102.584 421.417 Q100.918 422.921 100.918 425.606 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip392)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2181.52,1346.33 229.703,1168.21 768.768,656.844 2241.99,1413.26 2196.41,96.8724 2570.53,1512.71 698.18,1077.39 2061.43,1449.66 1693.87,764.413 2515.39,1751.15 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M242.187 209.375 L542.746 209.375 L542.746 105.695 L242.187 105.695  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"242.187,209.375 542.746,209.375 542.746,105.695 242.187,105.695 242.187,209.375 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"269.757,157.535 435.176,157.535 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M476.588 177.223 Q474.782 181.852 473.07 183.264 Q471.357 184.676 468.486 184.676 L465.083 184.676 L465.083 181.112 L467.583 181.112 Q469.343 181.112 470.315 180.278 Q471.287 179.445 472.468 176.343 L473.232 174.399 L462.746 148.889 L467.259 148.889 L475.361 169.167 L483.463 148.889 L487.977 148.889 L476.588 177.223 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M495.268 170.88 L502.907 170.88 L502.907 144.515 L494.597 146.181 L494.597 141.922 L502.861 140.255 L507.537 140.255 L507.537 170.88 L515.176 170.88 L515.176 174.815 L495.268 174.815 L495.268 170.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n```\n:::\n:::\n\n\n\n\n\n\nAnd here, we use the df2, and plot variable b and c vs. a.\n\n\n\n\n::: {#16 .cell execution_count=1}\n``` {.julia .cell-code}\n# the same, and plotting two y variables\n@df df2 plot(:a, [:b, :c])\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip450\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M0 1920 L2688 1920 L2688 -4.26326e-14 L0 -4.26326e-14  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip451\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M141.839 1800.78 L2640.76 1800.78 L2640.76 47.2441 L141.839 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip452\">\n    <rect x=\"141\" y=\"47\" width=\"2500\" height=\"1755\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"474.504,1800.78 474.504,47.2441 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"998.386,1800.78 998.386,47.2441 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1522.27,1800.78 1522.27,47.2441 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2046.15,1800.78 2046.15,47.2441 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2570.03,1800.78 2570.03,47.2441 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"141.839,1478.61 2640.76,1478.61 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"141.839,1123.13 2640.76,1123.13 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"141.839,767.642 2640.76,767.642 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"141.839,412.158 2640.76,412.158 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"141.839,56.6741 2640.76,56.6741 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,1800.78 2640.76,1800.78 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"474.504,1800.78 474.504,1781.88 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"998.386,1800.78 998.386,1781.88 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1522.27,1800.78 1522.27,1781.88 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2046.15,1800.78 2046.15,1781.88 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2570.03,1800.78 2570.03,1781.88 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M469.157 1861.55 L485.477 1861.55 L485.477 1865.48 L463.532 1865.48 L463.532 1861.55 Q466.194 1858.79 470.778 1854.16 Q475.384 1849.51 476.565 1848.17 Q478.81 1845.65 479.69 1843.91 Q480.592 1842.15 480.592 1840.46 Q480.592 1837.71 478.648 1835.97 Q476.727 1834.23 473.625 1834.23 Q471.426 1834.23 468.972 1835 Q466.542 1835.76 463.764 1837.31 L463.764 1832.59 Q466.588 1831.46 469.041 1830.88 Q471.495 1830.3 473.532 1830.3 Q478.903 1830.3 482.097 1832.98 Q485.291 1835.67 485.291 1840.16 Q485.291 1842.29 484.481 1844.21 Q483.694 1846.11 481.588 1848.7 Q481.009 1849.37 477.907 1852.59 Q474.805 1855.78 469.157 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1001.4 1835 L989.59 1853.45 L1001.4 1853.45 L1001.4 1835 M1000.17 1830.92 L1006.05 1830.92 L1006.05 1853.45 L1010.98 1853.45 L1010.98 1857.34 L1006.05 1857.34 L1006.05 1865.48 L1001.4 1865.48 L1001.4 1857.34 L985.794 1857.34 L985.794 1852.82 L1000.17 1830.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1522.67 1846.34 Q1519.53 1846.34 1517.67 1848.49 Q1515.84 1850.65 1515.84 1854.4 Q1515.84 1858.12 1517.67 1860.3 Q1519.53 1862.45 1522.67 1862.45 Q1525.82 1862.45 1527.65 1860.3 Q1529.5 1858.12 1529.5 1854.4 Q1529.5 1850.65 1527.65 1848.49 Q1525.82 1846.34 1522.67 1846.34 M1531.96 1831.69 L1531.96 1835.95 Q1530.2 1835.11 1528.39 1834.67 Q1526.61 1834.23 1524.85 1834.23 Q1520.22 1834.23 1517.77 1837.36 Q1515.34 1840.48 1514.99 1846.8 Q1516.35 1844.79 1518.41 1843.72 Q1520.47 1842.64 1522.95 1842.64 Q1528.16 1842.64 1531.17 1845.81 Q1534.2 1848.96 1534.2 1854.4 Q1534.2 1859.72 1531.05 1862.94 Q1527.9 1866.15 1522.67 1866.15 Q1516.68 1866.15 1513.51 1861.57 Q1510.34 1856.96 1510.34 1848.24 Q1510.34 1840.04 1514.22 1835.18 Q1518.11 1830.3 1524.66 1830.3 Q1526.42 1830.3 1528.21 1830.65 Q1530.01 1830.99 1531.96 1831.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2046.15 1849.07 Q2042.82 1849.07 2040.9 1850.85 Q2039 1852.64 2039 1855.76 Q2039 1858.89 2040.9 1860.67 Q2042.82 1862.45 2046.15 1862.45 Q2049.48 1862.45 2051.4 1860.67 Q2053.33 1858.86 2053.33 1855.76 Q2053.33 1852.64 2051.4 1850.85 Q2049.51 1849.07 2046.15 1849.07 M2041.47 1847.08 Q2038.46 1846.34 2036.78 1844.28 Q2035.11 1842.22 2035.11 1839.26 Q2035.11 1835.11 2038.05 1832.71 Q2041.01 1830.3 2046.15 1830.3 Q2051.31 1830.3 2054.25 1832.71 Q2057.19 1835.11 2057.19 1839.26 Q2057.19 1842.22 2055.5 1844.28 Q2053.84 1846.34 2050.85 1847.08 Q2054.23 1847.87 2056.1 1850.16 Q2058 1852.45 2058 1855.76 Q2058 1860.78 2054.92 1863.47 Q2051.87 1866.15 2046.15 1866.15 Q2040.43 1866.15 2037.35 1863.47 Q2034.3 1860.78 2034.3 1855.76 Q2034.3 1852.45 2036.2 1850.16 Q2038.09 1847.87 2041.47 1847.08 M2039.76 1839.7 Q2039.76 1842.38 2041.43 1843.89 Q2043.12 1845.39 2046.15 1845.39 Q2049.16 1845.39 2050.85 1843.89 Q2052.56 1842.38 2052.56 1839.7 Q2052.56 1837.01 2050.85 1835.51 Q2049.16 1834 2046.15 1834 Q2043.12 1834 2041.43 1835.51 Q2039.76 1837.01 2039.76 1839.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2544.72 1861.55 L2552.36 1861.55 L2552.36 1835.18 L2544.05 1836.85 L2544.05 1832.59 L2552.31 1830.92 L2556.99 1830.92 L2556.99 1861.55 L2564.63 1861.55 L2564.63 1865.48 L2544.72 1865.48 L2544.72 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2584.07 1834 Q2580.46 1834 2578.63 1837.57 Q2576.83 1841.11 2576.83 1848.24 Q2576.83 1855.34 2578.63 1858.91 Q2580.46 1862.45 2584.07 1862.45 Q2587.71 1862.45 2589.51 1858.91 Q2591.34 1855.34 2591.34 1848.24 Q2591.34 1841.11 2589.51 1837.57 Q2587.71 1834 2584.07 1834 M2584.07 1830.3 Q2589.88 1830.3 2592.94 1834.9 Q2596.02 1839.49 2596.02 1848.24 Q2596.02 1856.96 2592.94 1861.57 Q2589.88 1866.15 2584.07 1866.15 Q2578.26 1866.15 2575.18 1861.57 Q2572.13 1856.96 2572.13 1848.24 Q2572.13 1839.49 2575.18 1834.9 Q2578.26 1830.3 2584.07 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,1800.78 141.839,47.2441 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,1478.61 160.737,1478.61 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,1123.13 160.737,1123.13 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,767.642 160.737,767.642 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,412.158 160.737,412.158 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"141.839,56.6741 160.737,56.6741 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M85.2001 1491.95 L101.519 1491.95 L101.519 1495.89 L79.5751 1495.89 L79.5751 1491.95 Q82.2371 1489.2 86.8204 1484.57 Q91.4269 1479.92 92.6075 1478.57 Q94.8528 1476.05 95.7324 1474.32 Q96.6352 1472.56 96.6352 1470.87 Q96.6352 1468.11 94.6908 1466.38 Q92.7695 1464.64 89.6677 1464.64 Q87.4686 1464.64 85.0149 1465.4 Q82.5844 1466.17 79.8066 1467.72 L79.8066 1463 Q82.6307 1461.86 85.0843 1461.28 Q87.538 1460.7 89.5751 1460.7 Q94.9454 1460.7 98.1398 1463.39 Q101.334 1466.07 101.334 1470.57 Q101.334 1472.69 100.524 1474.62 Q99.737 1476.51 97.6306 1479.11 Q97.0519 1479.78 93.95 1483 Q90.8482 1486.19 85.2001 1491.95 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M91.9362 1109.92 L80.1307 1128.37 L91.9362 1128.37 L91.9362 1109.92 M90.7093 1105.85 L96.5889 1105.85 L96.5889 1128.37 L101.519 1128.37 L101.519 1132.26 L96.5889 1132.26 L96.5889 1140.41 L91.9362 1140.41 L91.9362 1132.26 L76.3344 1132.26 L76.3344 1127.74 L90.7093 1105.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M89.9917 765.778 Q86.8436 765.778 84.9918 767.931 Q83.1631 770.084 83.1631 773.834 Q83.1631 777.561 84.9918 779.736 Q86.8436 781.889 89.9917 781.889 Q93.1399 781.889 94.9685 779.736 Q96.8204 777.561 96.8204 773.834 Q96.8204 770.084 94.9685 767.931 Q93.1399 765.778 89.9917 765.778 M99.2741 751.125 L99.2741 755.385 Q97.5148 754.551 95.7093 754.112 Q93.9269 753.672 92.1676 753.672 Q87.538 753.672 85.0843 756.797 Q82.6538 759.922 82.3066 766.241 Q83.6723 764.227 85.7325 763.162 Q87.7927 762.074 90.2695 762.074 Q95.4778 762.074 98.487 765.246 Q101.519 768.394 101.519 773.834 Q101.519 779.158 98.3713 782.375 Q95.2232 785.593 89.9917 785.593 Q83.9964 785.593 80.8251 781.01 Q77.6538 776.403 77.6538 767.676 Q77.6538 759.482 81.5427 754.621 Q85.4316 749.737 91.9825 749.737 Q93.7417 749.737 95.5241 750.084 Q97.3296 750.431 99.2741 751.125 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M89.6677 413.026 Q86.3343 413.026 84.4131 414.808 Q82.5149 416.591 82.5149 419.716 Q82.5149 422.841 84.4131 424.623 Q86.3343 426.405 89.6677 426.405 Q93.001 426.405 94.9223 424.623 Q96.8435 422.818 96.8435 419.716 Q96.8435 416.591 94.9223 414.808 Q93.0241 413.026 89.6677 413.026 M84.9918 411.035 Q81.9825 410.294 80.2927 408.234 Q78.626 406.174 78.626 403.211 Q78.626 399.068 81.5658 396.66 Q84.5288 394.253 89.6677 394.253 Q94.8297 394.253 97.7695 396.66 Q100.709 399.068 100.709 403.211 Q100.709 406.174 99.0195 408.234 Q97.3528 410.294 94.3667 411.035 Q97.7463 411.822 99.6213 414.114 Q101.519 416.406 101.519 419.716 Q101.519 424.739 98.4408 427.424 Q95.3852 430.109 89.6677 430.109 Q83.9501 430.109 80.8714 427.424 Q77.8159 424.739 77.8159 419.716 Q77.8159 416.406 79.714 414.114 Q81.6121 411.822 84.9918 411.035 M83.2788 403.651 Q83.2788 406.336 84.9455 407.841 Q86.6353 409.345 89.6677 409.345 Q92.6769 409.345 94.3667 407.841 Q96.0797 406.336 96.0797 403.651 Q96.0797 400.966 94.3667 399.461 Q92.6769 397.957 89.6677 397.957 Q86.6353 397.957 84.9455 399.461 Q83.2788 400.966 83.2788 403.651 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M50.2234 70.019 L57.8623 70.019 L57.8623 43.6534 L49.5521 45.32 L49.5521 41.0608 L57.816 39.3941 L62.4919 39.3941 L62.4919 70.019 L70.1307 70.019 L70.1307 73.9541 L50.2234 73.9541 L50.2234 70.019 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M89.5751 42.4728 Q85.964 42.4728 84.1353 46.0376 Q82.3297 49.5793 82.3297 56.7089 Q82.3297 63.8153 84.1353 67.3801 Q85.964 70.9217 89.5751 70.9217 Q93.2093 70.9217 95.0148 67.3801 Q96.8435 63.8153 96.8435 56.7089 Q96.8435 49.5793 95.0148 46.0376 Q93.2093 42.4728 89.5751 42.4728 M89.5751 38.7691 Q95.3852 38.7691 98.4408 43.3756 Q101.519 47.9589 101.519 56.7089 Q101.519 65.4357 98.4408 70.0421 Q95.3852 74.6254 89.5751 74.6254 Q83.7649 74.6254 80.6862 70.0421 Q77.6307 65.4357 77.6307 56.7089 Q77.6307 47.9589 80.6862 43.3756 Q83.7649 38.7691 89.5751 38.7691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"212.563,1733.95 474.504,549.59 736.445,1751.15 998.386,1017.39 1260.33,1746.8 1522.27,591.336 1784.21,1553.04 2046.15,997.382 2308.09,949.699 2570.03,1018.83 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"212.563,96.8724 474.504,1196.23 736.445,1164.56 998.386,228.02 1260.33,280.693 1522.27,1591.83 1784.21,1689.09 2046.15,1166.85 2308.09,1727.49 2570.03,1452.32 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M2255.14 261.215 L2557.46 261.215 L2557.46 105.695 L2255.14 105.695  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2255.14,261.215 2557.46,261.215 2557.46,105.695 2255.14,105.695 2255.14,261.215 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2282.9,157.535 2449.5,157.535 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M2491.11 177.223 Q2489.3 181.852 2487.59 183.264 Q2485.87 184.676 2483 184.676 L2479.6 184.676 L2479.6 181.112 L2482.1 181.112 Q2483.86 181.112 2484.83 180.278 Q2485.8 179.445 2486.98 176.343 L2487.75 174.399 L2477.26 148.889 L2481.78 148.889 L2489.88 169.167 L2497.98 148.889 L2502.49 148.889 L2491.11 177.223 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2509.79 170.88 L2517.42 170.88 L2517.42 144.515 L2509.11 146.181 L2509.11 141.922 L2517.38 140.255 L2522.05 140.255 L2522.05 170.88 L2529.69 170.88 L2529.69 174.815 L2509.79 174.815 L2509.79 170.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2282.9,209.375 2449.5,209.375 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M2491.11 229.063 Q2489.3 233.692 2487.59 235.104 Q2485.87 236.516 2483 236.516 L2479.6 236.516 L2479.6 232.952 L2482.1 232.952 Q2483.86 232.952 2484.83 232.118 Q2485.8 231.285 2486.98 228.183 L2487.75 226.239 L2477.26 200.729 L2481.78 200.729 L2489.88 221.007 L2497.98 200.729 L2502.49 200.729 L2491.11 229.063 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2513 222.72 L2529.32 222.72 L2529.32 226.655 L2507.38 226.655 L2507.38 222.72 Q2510.04 219.965 2514.62 215.336 Q2519.23 210.683 2520.41 209.341 Q2522.66 206.817 2523.54 205.081 Q2524.44 203.322 2524.44 201.632 Q2524.44 198.878 2522.49 197.142 Q2520.57 195.405 2517.47 195.405 Q2515.27 195.405 2512.82 196.169 Q2510.39 196.933 2507.61 198.484 L2507.61 193.762 Q2510.43 192.628 2512.89 192.049 Q2515.34 191.47 2517.38 191.47 Q2522.75 191.47 2525.94 194.155 Q2529.14 196.841 2529.14 201.331 Q2529.14 203.461 2528.33 205.382 Q2527.54 207.28 2525.43 209.873 Q2524.86 210.544 2521.75 213.762 Q2518.65 216.956 2513 222.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n```\n:::\n:::\n\n\n\n\n\n\n#### A quick briefing about data frames in Julia versus R and dplyr is here\n\n[DataFrames Comparison R dplyr](https://dataframes.juliadata.org/stable/man/comparisons/#Comparison-with-the-R-package-dplyr)\n\n",
    "supporting": [
      "1_download_setup_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}